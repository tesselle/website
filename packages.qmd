---
title: "Overview"
description: |
   The **tesselle** packages focus on quantitative analysis methods developed for archaeology. They are designed to work seamlessly together and to complement general-purpose and other specialized statistical packages. These packages can be used to explore and analyze common data types in archaeology: count data, compositional data and chronological data.
bibliography: references.bib
listing:
  - id: gallery
    template: packages.ejs
    contents: packages.yml
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

Most of our packages are distributed on [<abbr title="Comprehensive R Archive Network">CRAN</abbr>](https://cran.r-project.org/), development versions and non-<abbr title="Comprehensive R Archive Network">CRAN</abbr> packages (e.g. <abbr title="work-in-progress">WIP</abbr> packages and large data packages) can be installed from [our repository](https://tesselle.r-universe.dev/).

Install the complete suite with:

```{r install, eval=FALSE}
install.packages("tesselle")
```

```{=html}
<style>
.grid-sizer, .grid-item { 
  width: 100%;
  margin: 5px auto;
}
@media only screen and (min-width: 600px) {
  .grid-sizer, .grid-item { 
    width: 47%;
    margin: 5px auto;
  }
}
@media only screen and (min-width: 768px) {
  .grid-sizer, .grid-item { 
    width: 30%;
    margin: 5px auto;
  }
}
</style>

<label for="isotope-select-filter" class="form-label">Filter packages:</label>
<select id="isotope-select-filter" class="form-select btn-outline-secondary filters-select">
  <option value="*" selected>show all</option>
  <option value=".count-data">count data</option>
  <option value=".compositional-data">compositionnal data</option>
  <option value=".chronological-data">chronological data</option>
  <option value=".multivariate-data">multivariate data analysis</option>
  <option value=".signal-processing">signal processing</option>
</select>
```

::: {.column-page}

::: {#gallery}
:::

:::

```{=html}
<script>
// init Isotope
var $grid = $('.grid').isotope({
  // options
  sortBy: 'random',
  itemSelector: '.card',
  percentPosition: true,
  masonry: {
    // use outer width of grid-sizer for columnWidth
    columnWidth: '.grid-sizer'
  }
});

// layout Isotope after each image loads
$grid.imagesLoaded().progress( function() {
  $grid.isotope('layout');
});

$('.filters-select').on( 'change', function() {
  // get filter value from option value
  var filterValue = this.value;
  $grid.isotope({ filter: filterValue });
});
</script>
```
